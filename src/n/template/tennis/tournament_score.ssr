{{%
	['queryTournamentDailySchedule', 'queryTournamentDraw']
%}}

<%- include('views/header', {title: '巡回赛赛况' }) %>
<% if(dynamicDataSet.tournament){ %>
	<% tournament = JSON.parse(dynamicDataSet.tournament); %>
	<div id="body" class="tournament" >
		<div id="hero" style="background-image: url(<%= tournament.extname
			? '/img/tennis/tournaments/' + tournament.id + '.mirror' + tournament.extname 
			: '/img/tennis/tournament-hero.jpg'
			%>);">
			<div class="overlay-gradient"></div>
			<div class="info">
				<p class="status">正在进行</p>
				<h2 class="name"><%= (tournament.name || '').replace(/\([^)]+\)/, '') %></h2>
				<p class="duration"><%= tournament.startdate.split(' ')[0].replace(/-/g, '/') 
					+ ' - ' + tournament.enddate.split(' ')[0].replace(/-/g, '/') %></p>
			</div>
		</div>

		<div class="border">
			<div id="days">
				<!-- 取当地日期，在startdate 和 enddate之间 -->
			</div>

			<div id="scores" class="ovh">
				<% events = tournament.events %>
				
				<% events.forEach(function(event){ %>
					<div class="score">
						<% status = event.status %>
						<div class="status"><%= status %></div>

						<% players = event.players %>
						
						<div class="players">
							<% players.forEach(function(player){ %>
								<div class="player">
									<i class="flag flags-<%= player.country %>"></i>
									<em class="name"><%= player.name %></em>
									<em class="seed">(<%= player.seed %>)</em>
		
									<ul class="player-score">
										<% games = player.set_games %>

										<% games.forEach(function(game){ %>
											<li><%= game %></li>
										<% }) %>
									</ul>
								</div>
							<% }) %>
						</div>
						<div class="box-score tar">
							<!-- 
								未开始 预测
								已结束 查看对战统计
								正在进行 分数直播
								-->
							<a href="" target="_blank">
								<% if(status == 'Upcoming'){ %>
									预测
								<% }else if(status == 'Finished'){ %>
									对战统计
								<% }else if(status == 'Happening'){ %>
									分数直播
								<% } %>
							</a>
						</div>
					</div>
				<% }) %>
				
				<br class="clr"></br>
			</div>

		</div>

		<div id="draw">
			<div id="bracket-1" class="bracket clearfix">
			</div>
			<div id="bracket-2" class="bracket clearfix"></div>
		</div>
		
	</div>
	<script src="/js/source/draw.js"></script>
	<script>
		var baseOffset = 0;
		var tournament = JSON.parse(`<%- dynamicDataSet.tournament %>`);
		var events = tournament.events;
		var dayMilli = 24 * 60 * 60 * 1000;
		var isFinished = false;
		
		events.forEach(function(e){
			if(e.round == 'Championship' && e.status == 'Finished'){
				isFinished = true;

				baseOffset = (new Date(tournament.enddate) - new Date().setHours(23, 59, 59, 0))/dayMilli;

				$('#hero .status').text('已结束')
			}
		});

		createDateSel();
		// 创建日期选择器
		function createDateSel(){
			var domBase = $('#days');
			var minDate = tournament.startdate;
			var maxDate = tournament.enddate;

			var curDate = getDate();
			var prevDate = getDate(-1);
			var nextDate = getDate(1);

			domBase.html(`
				<div class="fl prev">
					<
					<span class="day">${prevDate}</span>
				</div>
				<span class="day cur">${curDate}</span>
				<div class="fr next">
					<span class="day">${nextDate}</span>
					>
				</div>
				<br class="clr">
			`);

			if(curDate == prevDate){
				domBase.find('.prev').hide();
			}else{
				domBase.find('.prev').show()
			}

			if(curDate == nextDate){
				domBase.find('.next').hide();
			}else{
				domBase.find('.next').show()
			}

			domBase.off('click').on('click', '.prev', function(){
				console.log('prev')
				createDateSel(--baseOffset);
			}).on('click', '.next', function(){
				createDateSel(++baseOffset);
				console.log('next')
			});

			function getDate(dayOffset){
				dayOffset = (dayOffset || 0) + baseOffset;

				var now = new Date(+new Date() + dayOffset * dayMilli) ,
					min = new Date(minDate),
					max = new Date(maxDate);

				if(now.getTime() < min.getTime()){
					now = min
				}

				if(now.getTime() > max.getTime()){
					now = max
				}

				var m = now.getMonth() + 1;
				var d = now.getDate();

				return zeroFill(m) + '/' + zeroFill(d)

				function zeroFill(n){
					return n >9? n: ('0' + n);
				}
			}
		}

		// 赛程
		var tournamentDrawData = JSON.parse(unescape('<%= (dynamicDataSet.tournamentDraw) %>'));
		tournamentDrawData = tournamentDrawData.root.children;
		tournamentDrawData.pop();
		console.log(tournamentDrawData)

		var bracket1 = $('#bracket-1').width(320 * tournamentDrawData.length),
			bracket2 = $('#bracket-2').width(320 * tournamentDrawData.length);

		var bracket1HTML = '',
			bracket2HTML = '';

		tournamentDrawData.forEach(function(data, round){
			var bracketData1 = data.children[0];// round 列 上半部分
			var bracketData2 = data.children[1];// round 列 下半部分

			if(data.attributes.round != "Finals"){
				bracket1HTML += constructRound(bracketData1);
				bracket2HTML += constructRound(bracketData2);
			}else{
				bracket1HTML += constructRound(bracketData1, true);
			}
		})

		bracket1.append(bracket1HTML);
		bracket2.append(bracket2HTML);

		function constructRound(bracketData, isFinal){
			var s = `<div class="round${isFinal? ' final': ''}">`;

			if(bracketData.children.length){
				bracketData.children.forEach(function(players){

					s += constructMatch(players.attributes);

				})
			}
			

			s += '</div>';

			return s;

			function constructMatch(attributes){
				var matchStr = '<div class="match">';

				matchStr += `<div class="player">
					<i class="flag flags-${attributes.firstPlayerCountry}"></i>
					<em class="name">${attributes.firstPlayer}x</em>
					<em class="seed">${attributes.firstPlayerSeed}</em>
				</div>`;

				matchStr += `<div class="player">
					<i class="flag flags-${attributes.secondlayerCountry}"></i>
					<em class="name">${attributes.secondPlayer}x</em>
					<em class="seed">${attributes.secondPlayerSeed}</em>
				</div>`;

				matchStr += '</div>';

				return matchStr;
			}
		}

		clearupDraw();

		function clearupDraw(){
			$('.bracket').each(function(i, bracket){
				var rounds = $(bracket).find('.round').not('.final');
				$('.round.final').height(rounds.eq(0).height());
				
				rounds.forEach(function(r, i){
					if(i){
						r = $(r).height(rounds.eq(0).height());
						var prevRound = r.prev('.round');
						var prevRoundOffset = prevRound.offset().top;

						r.find('.match').each(function(j, match){
							var offset1 = prevRound.find('.match').eq(2*j).offset();
							var offset2 = prevRound.find('.match').eq(2*j + 1).offset();

							// var offsetTop = (offset2 + offset1 - 2 * prevRoundOffset)/2 - 45;

							var offsetTop = (offset2.top + offset2.height - offset1.top) / 2 + (offset1.top - prevRoundOffset) - 45 -16;
							r.find('.match').eq(j).css('top', offsetTop);
						});
					}
				})
			})
		}
	</script>
<% }else{ %>
	<script> alert('比赛还未开始'); history.back();</script>
<% } %>

<%- include views/footer %>